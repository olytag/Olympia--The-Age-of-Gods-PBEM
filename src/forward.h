// olytag - Olympia: The Age of Gods
//
// Copyright (c) 2022 by the OlyTag authors.
// Please see the LICENSE file in the root directory of this repository for further information.

#ifndef OLYTAG_FORWARD_H
#define OLYTAG_FORWARD_H

#include <stdio.h>
#include "types.h"

void add_aura(int who, int aura);
void add_new_players();
void add_piety(int who, int amount, int limit);
void add_skill_experience(int who, int skill);
void all_stack(int who, ilist *l);
int alone_here(int who);
int autocharge(int who, int total);
int building_owner(int ship);
int calc_beast_limit(int who, int boolean);
int calc_man_limit(int who, int boolean);
void call_init_routines();
void change_box_subkind(int where, int kind);
void character_report();
void check_db();
int check_skill(int who, int skill);
void check_win_conditions();
void clear_all_att(int who);
void clear_contacts(int who);
void close_logfile();
void cmd_shift(struct command *c);
int contacted(int target, int who);
int count_stack_any(int who);
int count_stack_any_real(int who, int ignore_ninjas, int ignore_angels);
void create_monster_stack(int item, int qty, int where);
int create_random_artifact(int gm_player);
int d_use_item(struct command *c);
void delete_all_effects(int what, int type, int sk);
void determine_output_order();
void do_times();
void eat_loop(int mail_now);
void extract_stacked_unit(int who);
void file_lock(char *name, int fd);
int find_command(char *cmd);
int first_character(int where);
void flush_unit_orders(int old_pl, int who);
int garrison_here(int where);
int garrison_spot_check(int garr, int target);
void gen_include_section();
void glob_init();
void gm_report(int gm_player);
void gm_show_all_skills(int skill_player, int boolean);
int has_holy_plant(int who);
int has_holy_symbol(int who);
void ilist_test();
void immediate_commands();
void init_load_sup(int who);
void init_lower();
void init_random();
void init_spaces();
int is_hostile(int ruler, int who);
int is_port_city(int where);
int item_ride_cap(int item);
void list_order_templates();
int load_cmap_players();
void load_db();
int loc_depth(int i);
int loc_target(int target);
void lock_tag();
void log_output(int code, char *format, ...);
int los_province_distance(int who, int i);
void mail_reports();
int makedir(const char *path, int mode);
void move_stack(int who, int where);
int near_rocky_coast(int loc);
int nearby_grave(int province);
void new_player_top(int mail_now);
int nps_invested(int who);
int oly_parse(struct command *c, char *cmd);
void open_logfile();
void open_times();
void out(int who, char *format, ...);
char *parse_arg(int who, char *s);
void player_banner();
void player_ent_info();
void player_report();
void post_month();
void pre_month();
void print_map(FILE *fp);
void prisoner_movement_escape_check(int who);
void process_orders();
int province_admin(int i);
void queue(int who, char *format, ...);
int rnd(int low, int high);
void read_spool(int mail_now);
int region_col(int i);
int region_row(int i);
int regular_combat(int, int, int, int);
void save_box(FILE *fp, int a);
void save_db();
void save_logdir();
void scan_char_skill_lore();
int select_attacker(int who, int target);
void set_bit(sparse *kr, int i);
void setup_html_all();
void setup_html_dir(int pl);
void set_html_pass(int pl);
void ship_storm_check(int ship);
void show_lore_sheets();
int ship_cap(int ship);
char *sout(char *format, ...);
void stage(char *s);
int sub_item(int where, int item, int something);
void summary_report();
void tagout(int who, char *format, ...);
int test_bit(sparse kr, int i);
void test_random();
void v_identify(struct command *c);
int will_admit(int pl, int who, int ruler);
void wiout(int who, int ind, char *format, ...);
void wout(int who, char *format, ...);
void write_factions();
void write_forwards();
void write_email();
void write_nations_lists();
void write_player_list();
void write_totimes();
void update_weather_view_locs(int who, int where);
int v_art_crown(struct command *c);
int v_art_destroy(struct command *c);
int v_art_orb(struct command *c);
int v_art_teleport(struct command *c);
int v_move_attack(struct command *c);
int v_power_jewel(struct command *c);
int v_summon_aid(struct command *c);
int v_use_death(struct command *c);
int v_use_drum(struct command *c);
int v_use_faery_artifact(struct command *c);
int v_use_fiery(struct command *c);
int v_use_heal(struct command *c);
int v_use_item(struct command *c);
int v_use_orb(struct command *c);
int v_use_proj_cast(struct command *c);
int v_use_quick_cast(struct command *c);
int v_use_slave(struct command *c);
int v_use_weightlessness(struct command *c);

// mdhender: bulk from use.c
int v_attack_tactics();
int v_defense_tactics();
int v_prac_control();
int v_prac_protect();
int v_use_beasts();
int v_sail(), d_sail(), i_sail();
int v_brew(), d_brew_heal(), d_brew_death(), d_brew_slave(), d_brew_fiery();
int d_brew_weightlessness();
int v_add_ram(), d_add_ram();
int v_remove_ram(), d_remove_ram();
int v_wood(), v_yew(), v_catch();
int v_spy_inv(), d_spy_inv(), v_spy_lord(), d_spy_lord();
int v_spy_skills(), d_spy_skills();
int v_adv_med(), d_adv_med(), v_hinder_med(), d_hinder_med();
int v_defense(), d_defense();
int v_archery(), d_archery();
int v_swordplay(), d_swordplay();
int v_detect_gates(), d_detect_gates(), v_jump_gate(), v_teleport();
int v_reverse_jump(), v_reveal_key(), d_reveal_key();
int v_seal_gate(), d_seal_gate(), v_unseal_gate(), d_unseal_gate();
int v_notify_unseal(), d_notify_unseal(), v_rem_seal(), d_rem_seal();
int v_notify_jump(), d_notify_jump(), v_meditate(), d_meditate();
int v_heal(), d_heal(), v_reveal_mage(), d_reveal_mage(), v_appear_common();
int v_view_aura(), d_view_aura(), v_shroud_abil(), d_shroud_abil();
int v_detect_abil(), d_detect_abil(), v_detect_scry(), d_detect_scry();
int v_scry_region(), d_scry_region(), v_shroud_region(), d_shroud_region();
int v_dispel_region(), d_dispel_region(), v_dispel_abil(), d_dispel_abil();
int v_proj_cast(), d_proj_cast(), v_locate_char(), d_locate_char();
int v_bar_loc(), d_bar_loc(), v_unbar_loc(), d_unbar_loc();
int v_forge_palantir(), d_forge_palantir(), v_destroy_art(), d_destroy_art();
int v_show_art_creat(), d_show_art_creat(), v_show_art_reg(), d_show_art_reg();
int v_save_proj(), d_save_proj(), v_save_quick(), d_save_quick();
int v_quick_cast(), d_quick_cast(), v_rem_art_cloak(), d_rem_art_cloak();
int v_write_spell(), d_write_spell(), v_curse_noncreat(), d_curse_noncreat();
int v_cloak_creat(), d_cloak_creat(), v_cloak_reg(), d_cloak_reg();
int v_forge_aura(), d_forge_aura(), v_bribe(), d_bribe();
int v_shipbuild(struct command *c);
int v_summon_savage(), v_keep_savage(), d_keep_savage();
int v_improve_opium(), d_improve_opium(), v_lead_to_gold(), d_lead_to_gold();
int v_raise(), d_raise(), v_rally(), d_rally(), v_incite(), d_incite();
int v_bird_spy(), d_bird_spy(), v_eat_dead(), d_eat_dead();
int v_raise_corpses(), v_undead_lord(), d_undead_lord();
int v_banish_undead(), d_banish_undead(), v_keep_undead(), d_keep_undead();
int v_aura_blast(), d_aura_blast(), v_aura_reflect(), v_banish_corpses(), d_banish_corpses();
int v_summon_rain(), d_summon_rain(), v_summon_wind(), d_summon_wind();
int v_summon_fog(), d_summon_fog(), v_dissipate(), d_dissipate();
int v_direct_storm(), v_renew_storm(), d_renew_storm();
int v_lightning(), d_lightning();
int v_seize_storm(), d_seize_storm(), v_death_fog(), d_death_fog();
int v_hide(), d_hide(), v_sneak(), d_sneak(), v_fierce_wind(), d_fierce_wind();
int v_conceal_nation(), d_conceal_nation();
int v_mage_menial(), d_mage_menial(),       v_reveal_vision(), d_reveal_vision();
int v_create_dirt_golem(), d_create_dirt_golem();
int v_create_flesh_golem(), d_create_flesh_golem();
int v_create_iron_golem(), d_create_iron_golem();
int v_resurrect(), d_resurrect(), v_prep_ritual(), d_prep_ritual();
int v_last_rites(), d_last_rites(), v_remove_bless(), d_remove_bless();
int v_find_rich(), d_find_rich(), v_torture(), d_torture();
int v_fight_to_death(), v_breed(), d_breed(), v_fish();
int v_petty_thief(), d_petty_thief(), i_petty_thief(),        v_persuade_oath(), d_persuade_oath();
int v_forge_art_x(), d_forge_art_x(), v_trance(), d_trance();
int v_teleport_item(), d_teleport_item(), v_tap_health(), d_tap_health();
#if 0
int v_bind_storm(), d_bind_storm();
#endif
int v_use_train_riding(), v_use_train_war();
int v_assassinate(), d_assassinate();
int v_find_food(), d_find_food();
int v_generic_trap(), d_generic_trap();
int v_bless_follower(), v_proselytise(), v_create_holy_symbol();
int d_create_holy_symbol();
int d_detect_beasts(), v_detect_beasts();
int d_capture_beasts(), v_capture_beasts();
int v_gather_holy_plant(), d_gather_holy_plant();
int v_find_mountain_trail(), v_obscure_mountain_trail();
int d_obscure_mountain_trail();
int v_improve_mining(), d_improve_mining();
int v_conceal_mine(), d_conceal_mine();
int v_protect_mine(), d_protect_mine();
int v_bless_fort(), d_bless_fort();
int v_weaken_fort(), d_weaken_fort();
int v_find_forest_trail(), d_obscure_forest_trail(), v_obscure_forest_trail();
int d_improve_logging(), v_improve_logging(), d_find_hidden_features();
int v_find_hidden_features(), v_improve_fort(), d_improve_fort();
int v_recruit_elves(), d_recruit_elves();
int d_improve_quarrying(), v_improve_quarrying();
int d_improve_smithing(), v_improve_smithing();
int d_edge_of_kireus(), v_edge_of_kireus();
int d_create_mithril(), v_create_mithril();
int v_enchant_guard(), d_enchant_guard();
int v_urchin_spy(), d_urchin_spy();
int v_draw_crowds(), d_draw_crowds();
int v_arrange_mugging(), d_arrange_mugging();
int d_calm_peasants();
int v_improve_charisma(), d_improve_charisma();
int d_mesmerize_crowd();
int d_improve_taxes();
int d_guard_loyalty();
int d_instill_fanaticism();
int d_find_all_hidden_features();
int d_conceal_location(), v_conceal_location();
int d_create_ninja(), v_create_ninja();
int d_create_mist();
int d_dedicate_temple(), v_dedicate_temple();
int d_dedicate_tower(), v_dedicate_tower();
int v_smuggle_goods(struct command *c), d_smuggle_goods(struct command *c), v_smuggle_men(struct command *c), d_smuggle_men(struct command *c), v_build_wagons(struct command *c), d_build_wagons(struct command *c), v_increase_demand(struct command *c), d_increase_demand(struct command *c), v_decrease_demand(struct command *c), d_decrease_demand(struct command *c), v_increase_supply(struct command *c), d_increase_supply(struct command *c), v_decrease_supply(struct command *c), d_decrease_supply(struct command *c), v_hide_money(struct command *c), d_hide_money(struct command *c), v_hide_item(struct command *c), d_hide_item(struct command *c);
int v_grow_pop(struct command *c), d_grow_pop(struct command *c);
int d_add_sails(struct command *c);
int v_add_sails(struct command *c);
int d_remove_sails(struct command *c);
int v_remove_sails(struct command *c);
int d_add_forts(struct command *c);
int v_add_forts(struct command *c);
int d_remove_forts(struct command *c);
int v_remove_forts(struct command *c);
int d_add_keels(struct command *c);
int v_add_keels(struct command *c);
int d_remove_keels(struct command *c);
int v_remove_keels(struct command *c);
int d_add_ports(struct command *c);
int v_add_ports(struct command *c);
int d_remove_ports(struct command *c);
int v_remove_ports(struct command *c);
int d_fortify_castle(struct command *c);
int v_fortify_castle(struct command *c);
int d_strengthen_castle(struct command *c);
int v_strengthen_castle(struct command *c);
int d_moat_castle(struct command *c);
int v_moat_castle(struct command *c);
int d_widen_entrance(struct command *c);
int v_widen_entrance(struct command *c);
int v_mine_iron(), d_mine_iron(), v_mine_gold(), d_mine_gold();
int v_mine_mithril(), d_mine_mithril(), v_quarry();
int v_mine_gate_crystal(), d_mine_gate_crystal();
int d_add_wooden_shoring(), v_add_wooden_shoring();
int d_add_iron_shoring(), v_add_iron_shoring();
int v_mutate_art();
int d_mutate_art();
int v_conceal_arts();
int d_conceal_arts();
int v_detect_arts();
int d_detect_arts();
int v_obscure_art();
int d_obscure_art();
int v_unobscure_art();
int d_unobscure_art();
int v_reveal_arts();
int d_reveal_arts();
int v_deep_identify();
int v_personal_fight_to_death();
int v_forced_march();
int v_hinder_med_b(), d_hinder_med_b();
int v_vision_reg(), d_vision_reg();
int v_use_cs(struct command *c);
int v_implicit(struct command *c);

// mdhender: temporary declarations to appease compiling on Windows with gcc
void bcopy(const void *src, void *dest, size_t n);
void bzero(void *s, size_t n);
long int random(void);;
void srandom(unsigned int seed);

#endif //OLYTAG_FORWARD_H
